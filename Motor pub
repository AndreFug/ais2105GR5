# Copyright 2016 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import rclpy
from rclpy.node import Node

from std_msgs.msg import *
import math


class MinimalPublisher(Node):

    def __init__(self):
        super().__init__('minimal_publisher')
        self.publisher1 = self.create_publisher(Float64MultiArray, 'motor1', 10)
        self.publisher2 = self.create_publisher(Float64MultiArray, 'motor2', 10)
        self.publisher3 = self.create_publisher(Float64MultiArray, 'motor3', 10)

        timer_period = 1  # seconds
        self.timer = self.create_timer(timer_period, self.timer_callback)
        self.i = 0

    def timer_callback(self):
        msg1 = Float64MultiArray()
        msg2 = Float64MultiArray()
        msg3 = Float64MultiArray()

        msg1.data = [math.sin, 2.0, 3.0, 4.0, float(self.i)]
        msg2.data = [1.0, 2.0, 3.0, float(self.i), 5.0]
        msg3.data = [1.0, 2.0, float(self.i), 4.0, 5.0]

        self.publisher1.publish(msg1)
        self.publisher2.publish(msg2)
        self.publisher3.publish(msg3)

        self.get_logger().info('Publishing: "%s"' % msg1.data)
        self.get_logger().info('Publishing: "%s"' % msg2.data)
        self.get_logger().info('Publishing: "%s"' % msg3.data)

        self.i += 1


def main(args=None):
    rclpy.init(args=args)

    minimal_publisher = MinimalPublisher()

    rclpy.spin(minimal_publisher)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    minimal_publisher.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
